- if activity.comments_count > 0
  .comment_list{:id => "activity_#{activity.id}_comments"}
- else
  .comment_list_empty{:id => "activity_#{activity.id}_comments"}
- if activity.comments_count > 0
  - @comments = activity.comments.published_and_abusive.by_first_created.find(:all, :include => :user)
  - comments_without_abuse = @comments.reject {|x| x.status == 'abusive'}
  = render :partial => "comments/show", :locals => {:comment => comments_without_abuse.first} if comments_without_abuse.first
  - if comments_without_abuse.length > 10
    .col-group
      .col-11.col-offset-1
        .col-content
          .comment_more
          = link_to tr("More", "view/activities/_comments")+" (#{(comments_without_abuse.length-2).to_s})", activity_comments_url(activity), :class => "idea_name_link"
  - elsif comments_without_abuse.length > 2
    .col-group
      .col-11.col-offset-1
        .col-content
          .comment_more
            = link_to tr("More", "view/activities/_comments")+" (#{(comments_without_abuse.length-2).to_s})", more_activity_comments_url(activity), |
              :method => :get,                                                                                                                      |
              :remote=>true,                                                                                                                        |
              'data-disable-with' => "",                                                                                                            |
              'data-loader-name' => "horizontal_small"                                                                                              |
  = render :partial => "comments/show", :locals => {:comment => comments_without_abuse.last} if comments_without_abuse.length > 1
  - if @comments.length > 0 and activity.class != ActivityCommentParticipant
    = render :partial => "comments/new_inline", :locals => {:activity => activity, :comment => Comment.new}
