.point{:id => point.id}
  .point_name
    - if point.is_down?
      %span.for_and_against_hacky= tr("Points against", "view/points/_show")
    - else
      %span.for_and_against_hacky= tr("Points for", "view/points/_show")
    = link_to_unless_current h(point.name), point
    = render :partial=>"points/report_content", :locals=>{:point=>point}
    = render :partial=>"points/flagged", :locals=>{:point=>point}
  - if point.has_other_idea?
    .point_other
      = tr("Supporting {idea_name}", "view/points/_show", :idea_name => link_to(point.other_idea.name, point.other_idea))
  .point_byline
    = tr("by {author_sentence}", "view/points/_show", :author_sentence => point.author_sentence)
    \&middot; #{tr("added {time_ago}", "view/points/_show", :time_ago => time_ago(point.created_at))}
    %span.point_edit
      - if point.discussions_count > 0
        = link_to tr("{count} discussions", "view/points/_show", :count => point.discussions_count), discussions_point_url(point)
      - else
        = link_to tr("Discuss", "view/points/_show"), discussions_point_url(point)
      or
      \#{link_to tr("Edit", "view/points/_show"), new_point_revision_url(point), :title => tr("Can you make this point more persuasive? Go ahead, change it!", "view/points/_show")}
  .point_content
    = point.content_html
  - if point.has_website?
    .point_source
      = tr("Source:", "view/points/_show")
      %a{:href => point.website_link}= truncate(point.website_link,:length=>70)
  .point_qualities
    = render :partial => "points/button_small", :locals => {:point => point, :quality => quality}
