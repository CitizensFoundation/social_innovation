= render :partial => "header"
- if @priority.replaced?
  #hp_subhead
    = tr("This priority was replaced by {priority_name}", "view/priorities/show", :priority_name => link_to(@priority.change.new_priority.name, @priority.change.new_priority))
- else
  = render :partial => "nav"
%p
  #priorities_container
    - if @priority.has_change?
      = render :partial => "changes/show", :locals => {:change => @priority.change}
      %p
        = render :partial => "changes/status", :locals => {:change => @priority.change}
      %p
    - if @priority.points_count == 0
      = tr("Please tell us why we should endorse or oppose this priority by <a href='{new_point_url}'>adding a point</a>. You can even suggest a different priority instead.", "view/priorities/show", :new_point_url => new_priority_point_path(@priority))
    - else
      - if @endorsement and @endorsement.is_down?
        - if @priority.down_points_count > 0
          = render :partial => "priorities/points", :locals => {:points => @opposer_points, :point_value => -1, :qualities => @qualities}
        - if @priority.down_documents_count > 0
          = render :partial => "priorities/documents", :locals => {:documents => @opposer_documents, :document_value => -1}
        - if @priority.neutral_points_count > 0
          = render :partial => "priorities/points", :locals => {:points => @neutral_points, :point_value => 2, :qualities => @qualities}
        - if @priority.neutral_documents_count > 0
          = render :partial => "priorities/documents", :locals => {:documents => @neutral_documents, :document_value => 2}
        - if @priority.up_points_count > 0
          = render :partial => "priorities/points", :locals => {:points => @endorser_points, :point_value => 1, :qualities => @qualities}
      - elsif @endorsement and @endorsement.is_up?
        - if @priority.up_points_count > 0
          = render :partial => "priorities/points", :locals => {:points => @endorser_points, :point_value => 1, :qualities => @qualities}
        - if @priority.up_documents_count > 0
          = render :partial => "priorities/documents", :locals => {:documents => @endorser_documents, :document_value => 1}
        - if @priority.neutral_points_count > 0
          = render :partial => "priorities/points", :locals => {:points => @neutral_points, :point_value => 2, :qualities => @qualities}
        - if @priority.neutral_documents_count > 0
          = render :partial => "priorities/documents", :locals => {:documents => @neutral_documents, :document_value => 2}
        - if @priority.down_points_count > 0
          = render :partial => "priorities/points", :locals => {:points => @opposer_points, :point_value => -1, :qualities => @qualities}
      - else
        - if @priority.up_points_count > 0
          = render :partial => "priorities/points", :locals => {:points => @endorser_points, :point_value => 1, :qualities => @qualities}
        - if @priority.down_points_count > 0
          = render :partial => "priorities/points", :locals => {:points => @opposer_points, :point_value => -1, :qualities => @qualities}
        - if @priority.neutral_points_count > 0
          = render :partial => "priorities/points", :locals => {:points => @neutral_points, :point_value => 2, :qualities => @qualities}
        - if @priority.up_documents_count > 0
          = render :partial => "priorities/documents", :locals => {:documents => @endorser_documents, :document_value => 1}
        - if @priority.down_documents_count > 0
          = render :partial => "priorities/documents", :locals => {:documents => @opposer_documents, :document_value => -1}
        - if @priority.neutral_documents_count > 0
          = render :partial => "priorities/documents", :locals => {:documents => @neutral_documents, :document_value => 2}
      - if @document_ids.size < @priority.documents_count
        %p
          = tr("See all <a href='{everyone_link}'>{count} documents</a>, or just those helpful to <a href='{endorser_link}'>endorsers</a>, <a href='{opposer_link}'>opposers</a>, or <a href='{undeclared_link}'>undeclared</a>.", "view/priorities/show", :count => @priority.documents_count, :everyone_link => everyone_documents_priority_url(@priority), :endorser_link => endorser_documents_priority_url(@priority), :opposer_link => opposer_documents_priority_url(@priority), :undeclared_link => neutral_documents_priority_url(@priority))
    - if @relationships.any?
      .heading
        - if current_instance.is_tags? and @priority.attribute_present?("cached_issue_list")
          = relationship_tags_sentence(@priority.cached_issue_list)
        - else
          = tr("Other priorities to consider", "view/priorities/show")
      - num_shown = 0
      - @relationships.each do |other_priority, relationships|
        - num_shown += 1
        - next if num_shown > 3
        - if @endorsements
          - endorsement = @endorsements.detect {|e| e.priority_id == other_priority.id }
        .related_priority{:id => "priority_#{other_priority.id}"}
          .priority_name_related{:id => "priority_#{other_priority.id}_name"}
            = link_to_unless_current h(other_priority.name), other_priority, :class => "priority_name_link"
          .priority_related_intro
            = relationship_sentence(relationships)
          .priority_actions
            = render :partial => "priorities/action_show", :locals => {:priority => other_priority, :endorsement => endorsement }
    - if @priority_process
      / <haml:loud> render :partial =&amp;gt; &amp;quot;process_speech_master_videos/latest_video_discussions&amp;quot; </haml:loud>
      = render :partial => "priority_processes/templates/#{@priority_process.process_type.template_name}"
    - if logged_in?
      = render :partial => "bulletins/form", :locals => {:activity => Activity.new, :comment => Comment.new }
    - else
      .heading= tr("What's happening on this priority", "view/priorities/show")
    #activities
      - for activity in @activities
        = render :partial => "activities/show", :locals => {:activity => activity, :suffix => "_noself"}
  #priorities_sidebar
    - if @activities.total_pages > 1
      = will_paginate(@activities, :params => {:action => "activities"} )
    = render :partial => "left_nav"
